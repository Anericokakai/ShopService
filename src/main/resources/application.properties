
spring.datasource.url=jdbc:postgresql://localhost:5432/shops
spring.datasource.username=rico
spring.datasource.password=anerico
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.jdc.lob.non_contextual_creation=true
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
spring.datasource.hikari.connectionTimeout=20000
spring.datasource.hikari.maximumPoolSize=5
spring.application.name=shop-service
server.servlet.context-path=/v2/api/shops
server.port=8087
spring.main.allow-bean-definition-overriding=true


#when the port for the eureka is changed
eureka.client.service-url.defaultZone=http://localhost:5000/eureka/

#when we want to send some usefl information eg context-path
eureka.instance.metadata-map.configPath=/v2/api/shops
eureka.instance.metadata-map.user=kakai
eureka.instance.metadata-map.password=Anericokakai@2004

management.endpoints.web.exposure.include=*
info.app.name=shop service
info.app.description=sop service to commnicate with the products microservice


#configuration of kafka producer and cosumers
#
##producer
#spring.kafka.producer.bootstrap-servers=localhost:9092
#spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
#spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
#spring.kafka.consumer.auto-offset-reset=earliest
#
##consumer
#spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
#spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
#spring.kafka.consumer.bootstrap-servers=localhost:9092
#spring.kafka.consumer.properties.spring.json.trusted.packages=*
##group id
#spring.kafka.consumer.group-id=shopGroup
#spring.kafka.topic.name=shopwritesTopic
#
